#Agora monte a estrutura do script em sql e coloque o código aqui, monte o banco utilizando o XAMPP
```
DROP DATABASE IF EXISTS mercado_do_seu_ze;
CREATE DATABASE IF NOT EXISTS mercado_do_seu_ze;
USE mercado_do_seu_ze;

CREATE TABLE clientes(
    cliente_id int(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    nome varchar(252) NOT NULL,
    cpf varchar(11) NOT NULL UNIQUE,
    email varchar(252) NOT NULL UNIQUE,
    telefone varchar(20) NOT NULL
);

CREATE TABLE produtos(
    produto_id int(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    nome varchar(252) NOT NULL,
    descricao VARCHAR(252),
    preco FLOAT(10,5) NOT NULL,
    estoque INT(20) NOT NULL
);

CREATE TABLE vendas (
    venda_id int(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    cliente_id int(10),
    data_venda date NOT NULL,
    valor_total FLOAT(10,5) NOT NULL,
    FOREIGN KEY (cliente_id) REFERENCES clientes(cliente_id)
);

CREATE TABLE itens_venda (
    item_id int(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    venda_id int(10),
    produto_id int(10),
    quantidade INT(20) NOT NULL,
    preco_unitario FLOAT(10,5) NOT NULL,
    FOREIGN KEY (venda_id) REFERENCES vendas(venda_id),
    FOREIGN KEY (produto_id) REFERENCES produtos(produto_id)
);
```
###não é necessário copiar essa parte
```
-- Inserir dados na tabela clientes
INSERT INTO clientes (nome, cpf, email, telefone) VALUES 
('José da Silva', '12345678901', 'jose.silva@email.com', '(11) 91234-5678'),
('Maria Oliveira', '23456789012', 'maria.oliveira@email.com', '(21) 92345-6789'),
('Carlos Souza', '34567890123', 'carlos.souza@email.com', '(31) 93456-7890'),
('Fernanda Lima', '45678901234', 'fernanda.lima@email.com', '(41) 94567-8901'),
('Ricardo Santos', '56789012345', 'ricardo.santos@email.com', '(51) 95678-9012'),
('Ana Costa', '67890123456', 'ana.costa@email.com', '(61) 96789-0123'),
('Lucas Pereira', '78901234567', 'lucas.pereira@email.com', '(71) 97890-1234'),
('Patricia Mendes', '89012345678', 'patricia.mendes@email.com', '(81) 98901-2345'),
('Giovanni Rocha', '90123456789', 'giovanni.rocha@email.com', '(91) 99012-3456'),
('Juliana Martins', '01234567890', 'juliana.martins@email.com', '(11) 91234-5679');

-- Inserir dados na tabela produtos
INSERT INTO produtos (nome, descricao, preco, estoque) VALUES 
('Arroz', 'Arroz branco tipo 1', 5.99, 50),
('Feijão', 'Feijão carioca', 7.49, 20),
('Macarrão', 'Macarrão espaguete', 4.99, 15),
('Óleo de soja', 'Óleo de soja refinado', 3.29, 8),
('Sabão em barra', 'Sabão em barra lava roupas', 2.49, 30),
('Detergente', 'Detergente líquido', 1.99, 5),
('Açúcar', 'Açúcar cristal', 3.19, 12),
('Sal', 'Sal refinado', 1.49, 25),
('Leite', 'Leite integral', 3.89, 60),
('Frango congelado', 'Frango inteiro congelado', 12.99, 18);

-- Inserir dados na tabela vendas
INSERT INTO vendas (cliente_id, data_venda, valor_total) VALUES 
(1, '2024-12-01', 45.89),
(2, '2024-12-02', 35.70),
(3, '2024-12-03', 20.49),
(4, '2024-12-04', 55.99),
(5, '2024-12-05', 72.89),
(6, '2024-12-06', 18.99),
(7, '2024-12-07', 60.30),
(8, '2024-12-08', 25.40),
(9, '2024-12-09', 80.00),
(10, '2024-12-10', 15.75);

-- Inserir dados na tabela itens_venda
INSERT INTO itens_venda (venda_id, produto_id, quantidade, preco_unitario) VALUES 
(1, 1, 3, 5.99),
(1, 2, 2, 7.49),
(2, 3, 4, 4.99),
(3, 4, 1, 3.29),
(4, 5, 6, 2.49),
(5, 6, 3, 1.99),
(6, 7, 2, 3.19),
(7, 8, 1, 1.49),
(8, 9, 4, 3.89),
(9, 10, 2, 12.99);
```

#Liste os nomes dos clientes e os produtos que eles compraram.
```
SELECT c.nome AS cliente, p.nome AS produto FROM clientes c JOIN vendas v ON c.cliente_id = v.cliente_id JOIN itens_venda iv ON v.venda_id = iv.venda_id JOIN produtos p ON iv.produto_id = p.produto_id;
```
#Liste os produtos que estão com estoque abaixo de 10 unidades.
```
SELECT nome, estoque FROM produtos WHERE estoque < 10;
```
#Liste o nome de todos os clientes que não compraram um determinado produto (por exemplo, "Arroz").
```
SELECT c.nome FROM clientes c WHERE c.cliente_id NOT IN (     SELECT v.cliente_id     FROM vendas v     JOIN itens_venda iv ON v.venda_id = iv.venda_id     JOIN produtos p ON iv.produto_id = p.produto_id     WHERE p.nome = 'Arroz' );
```
#Liste os clientes que nunca realizaram uma compra.
```
SELECT c.nome FROM clientes c LEFT JOIN vendas v ON c.cliente_id = v.cliente_id WHERE v.venda_id IS NULL;
```
#Encontre o cliente que gastou mais em compras no total
```
SELECT c.nome, SUM(v.valor_total) AS total_gasto FROM clientes c JOIN vendas v ON c.cliente_id = v.cliente_id GROUP BY c.cliente_id ORDER BY total_gasto DESC LIMIT 1;
```
#Mostrar o ultimo cliente a fazer compra
```
SELECT c.nome, v.data_venda FROM clientes c JOIN vendas v ON c.cliente_id = v.cliente_id ORDER BY v.data_venda DESC LIMIT 1;
```
#Exiba o valor total das vendas realizadas em cada dia.
```
SELECT v.data_venda, SUM(v.valor_total) AS valor_total_vendas FROM vendas v GROUP BY v.data_venda ORDER BY v.data_venda;
```
